// <auto-generated />
using System;
using CityInfoApi.Models_new;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfoApi.Migrations
{
    [DbContext(typeof(AlmasACC))]
    partial class AlmasACC14011ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1256_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CityInfoApi.Models.Anbar", b =>
                {
                    b.Property<byte>("ACode")
                        .HasColumnType("tinyint")
                        .HasColumnName("A_Code");

                    b.Property<string>("AAcc1")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc10")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc10")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc11")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc11")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc12")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc12")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc13")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc13")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc14")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc14")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc16")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc16")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc19")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc19")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc2")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc22")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc22")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc23")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc23")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc24")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc24")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc3")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc3")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc4")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc4")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc5")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc5")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc6")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc6")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc7")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc7")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("AAcc9")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("A_Acc9")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("AFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("A_Flag")
                        .HasDefaultValueSql("(1)");

                    b.Property<string>("AName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("A_Name")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("ANameA")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("A_NameA")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("ACode")
                        .HasName("PK_ANBAR");

                    b.HasIndex("AAcc1");

                    b.HasIndex("AAcc10");

                    b.HasIndex("AAcc11");

                    b.HasIndex("AAcc12");

                    b.HasIndex("AAcc13");

                    b.HasIndex("AAcc14");

                    b.HasIndex("AAcc16");

                    b.HasIndex("AAcc19");

                    b.HasIndex("AAcc2");

                    b.HasIndex("AAcc22");

                    b.HasIndex("AAcc23");

                    b.HasIndex("AAcc24");

                    b.HasIndex("AAcc3");

                    b.HasIndex("AAcc4");

                    b.HasIndex("AAcc5");

                    b.HasIndex("AAcc6");

                    b.HasIndex("AAcc7");

                    b.HasIndex("AAcc9");

                    b.HasIndex(new[] { "AName" }, "IX_ANBAR")
                        .IsUnique()
                        .HasFilter("[A_Name] IS NOT NULL");

                    b.ToTable("Anbar", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Bar1", b =>
                {
                    b.Property<int>("BNo")
                        .HasColumnType("int")
                        .HasColumnName("B_No");

                    b.Property<byte>("BAnbar")
                        .HasColumnType("tinyint")
                        .HasColumnName("B_Anbar");

                    b.Property<double?>("BBar")
                        .HasColumnType("float")
                        .HasColumnName("B_Bar");

                    b.Property<double?>("BBarGry")
                        .HasColumnType("float")
                        .HasColumnName("B_BarGry");

                    b.Property<string>("BBarnameh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("B_Barnameh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("B_Date")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BDateB")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("B_DateB")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BDateU")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("B_DateU")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("BDrsdPorsant")
                        .HasColumnType("float")
                        .HasColumnName("B_DrsdPorsant");

                    b.Property<double?>("BEzfBar")
                        .HasColumnType("float")
                        .HasColumnName("B_EzfBar");

                    b.Property<bool?>("BFlag")
                        .HasColumnType("bit")
                        .HasColumnName("B_Flag");

                    b.Property<double?>("BHazine")
                        .HasColumnType("float")
                        .HasColumnName("B_Hazine");

                    b.Property<double?>("BInputBar")
                        .HasColumnType("float")
                        .HasColumnName("B_InputBar");

                    b.Property<double?>("BInputBarGry")
                        .HasColumnType("float")
                        .HasColumnName("B_InputBarGry");

                    b.Property<long>("BKala")
                        .HasColumnType("int")
                        .HasColumnName("B_Kala");

                    b.Property<double?>("BKsrBar")
                        .HasColumnType("float")
                        .HasColumnName("B_KsrBar");

                    b.Property<double?>("BMab")
                        .HasColumnType("float")
                        .HasColumnName("B_Mab");

                    b.Property<double?>("BMab2")
                        .HasColumnType("float")
                        .HasColumnName("B_Mab2");

                    b.Property<long>("BMabPorsant")
                        .HasColumnType("int")
                        .HasColumnName("B_MabPorsant");

                    b.Property<string>("BMashin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("B_Mashin")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BNameN")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("B_NameN")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("BNum")
                        .HasColumnType("float")
                        .HasColumnName("B_Num");

                    b.Property<double?>("BNum2")
                        .HasColumnType("float")
                        .HasColumnName("B_Num2");

                    b.Property<long>("BNumKoli")
                        .HasColumnType("int")
                        .HasColumnName("B_NumKoli");

                    b.Property<long>("BPrsn")
                        .HasColumnType("int")
                        .HasColumnName("B_Prsn");

                    b.Property<long>("BSanad")
                        .HasColumnType("int")
                        .HasColumnName("B_Sanad");

                    b.Property<string>("BSharh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("B_Sharh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("BTimeU")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("B_TimeU")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("BUser")
                        .HasColumnType("tinyint")
                        .HasColumnName("B_User");

                    b.Property<double?>("BVznZrf")
                        .HasColumnType("float")
                        .HasColumnName("B_VznZrf");

                    b.Property<double?>("BZnum")
                        .HasColumnType("float")
                        .HasColumnName("B_ZNum");

                    b.Property<double?>("BZnum2")
                        .HasColumnType("float")
                        .HasColumnName("B_ZNum2");

                    b.Property<long>("BZnumKoli")
                        .HasColumnType("int")
                        .HasColumnName("B_ZNumKoli");

                    b.HasKey("BNo");

                    b.ToTable("Bar1", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Bar2", b =>
                {
                    b.Property<string>("B2DateF")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("B2_DateF")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("B2Discount")
                        .HasColumnType("float")
                        .HasColumnName("B2_Discount");

                    b.Property<byte?>("B2KindPay")
                        .HasColumnType("tinyint")
                        .HasColumnName("B2_KindPay");

                    b.Property<long?>("B2Mab")
                        .HasColumnType("bigint")
                        .HasColumnName("B2_Mab");

                    b.Property<long>("B2Moshtari")
                        .HasColumnType("int")
                        .HasColumnName("B2_Moshtari");

                    b.Property<int>("B2No")
                        .HasColumnType("int")
                        .HasColumnName("B2_No");

                    b.Property<long?>("B2NoPay")
                        .HasColumnType("bigint")
                        .HasColumnName("B2_NoPay");

                    b.Property<double?>("B2Num")
                        .HasColumnType("float")
                        .HasColumnName("B2_Num");

                    b.Property<double?>("B2Num2")
                        .HasColumnType("float")
                        .HasColumnName("B2_Num2");

                    b.Property<long>("B2NumKoli")
                        .HasColumnType("int")
                        .HasColumnName("B2_NumKoli");

                    b.Property<int>("B2Radif")
                        .HasColumnType("int")
                        .HasColumnName("B2_Radif");

                    b.Property<string>("B2Sharh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("B2_Sharh")
                        .UseCollation("Arabic_CI_AI");

                    b.ToTable("Bar2", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Check", b =>
                {
                    b.Property<long>("CCheck")
                        .HasColumnType("bigint")
                        .HasColumnName("C_Check");

                    b.Property<double?>("CArzMab")
                        .HasColumnType("float")
                        .HasColumnName("C_ArzMab");

                    b.Property<byte?>("CArzType")
                        .HasColumnType("tinyint")
                        .HasColumnName("C_ArzType");

                    b.Property<string>("CBank")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("C_Bank")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CDateC")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("C_DateC")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CDateV")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("C_DateV")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("CFlag")
                        .HasColumnType("bit")
                        .HasColumnName("C_Flag");

                    b.Property<string>("CHesab")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("C_Hesab")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CHesab2")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("C_Hesab2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<short?>("CKind")
                        .HasColumnType("smallint")
                        .HasColumnName("C_Kind");

                    b.Property<double?>("CMab")
                        .HasColumnType("float")
                        .HasColumnName("C_Mab");

                    b.Property<string>("CName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("C_Name")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CNoJary")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .HasColumnName("C_NoJary")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("CPrsnCheck")
                        .HasColumnType("tinyint")
                        .HasColumnName("C_PrsnCheck");

                    b.Property<long>("CRadif")
                        .HasColumnType("int")
                        .HasColumnName("C_Radif");

                    b.Property<long>("CSanad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("C_Sanad")
                        .HasDefaultValueSql("(0)");

                    b.Property<bool?>("CShahrestan")
                        .HasColumnType("bit")
                        .HasColumnName("C_Shahrestan");

                    b.Property<string>("CSharh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("C_Sharh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CShobeh")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("C_Shobeh")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("CCheck")
                        .HasName("PK_CHECK");

                    b.HasIndex("CHesab");

                    b.HasIndex("CHesab2");

                    b.HasIndex("CSanad", "CRadif");

                    b.HasIndex(new[] { "CDateC" }, "IX_Check");

                    b.ToTable("Check", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Factor1", b =>
                {
                    b.Property<int>("FFactor")
                        .HasColumnType("int")
                        .HasColumnName("F_Factor");

                    b.Property<string>("FAccAnbar")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("F_AccAnbar")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FAccEzafat")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("F_AccEzafat")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FAccKosorat")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("F_AccKosorat")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte>("FAnbar")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_Anbar");

                    b.Property<byte?>("FAnbar2")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_Anbar2");

                    b.Property<double?>("FAvarez")
                        .HasColumnType("float")
                        .HasColumnName("F_Avarez");

                    b.Property<string>("FDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("F_Date")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FDateA")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("F_DateA")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FDateTahvil")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("F_DateTahvil")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FDateU")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("F_DateU")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FDriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("F_DriverName")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("FEzafat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("F_Ezafat")
                        .HasDefaultValueSql("(0)");

                    b.Property<bool?>("FFixEzafat")
                        .HasColumnType("bit")
                        .HasColumnName("F_FixEzafat");

                    b.Property<bool?>("FFixKosorat")
                        .HasColumnType("bit")
                        .HasColumnName("F_FixKosorat");

                    b.Property<bool?>("FFixPorsant")
                        .HasColumnType("bit")
                        .HasColumnName("F_FixPorsant");

                    b.Property<bool?>("FFlag")
                        .HasColumnType("bit")
                        .HasColumnName("F_Flag");

                    b.Property<bool?>("FKdarsad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("F_Kdarsad")
                        .HasDefaultValueSql("(0)");

                    b.Property<byte>("FKind")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_Kind");

                    b.Property<byte?>("FKindPay")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_KindPay");

                    b.Property<double?>("FKosor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("F_Kosor")
                        .HasDefaultValueSql("(0)");

                    b.Property<double?>("FMab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("F_Mab")
                        .HasDefaultValueSql("(0)");

                    b.Property<double?>("FMabKol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("F_MabKol")
                        .HasDefaultValueSql("(0)");

                    b.Property<double?>("FMabPorsant")
                        .HasColumnType("float")
                        .HasColumnName("F_MabPorsant");

                    b.Property<double?>("FMaliat")
                        .HasColumnType("float")
                        .HasColumnName("F_Maliat");

                    b.Property<long>("FMoshtari")
                        .HasColumnType("int")
                        .HasColumnName("F_Moshtari");

                    b.Property<byte>("FMrkaz")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_Mrkaz");

                    b.Property<int>("FNo")
                        .HasColumnType("int")
                        .HasColumnName("F_No");

                    b.Property<long?>("FNoPay")
                        .HasColumnType("bigint")
                        .HasColumnName("F_NoPay");

                    b.Property<long>("FPorsant")
                        .HasColumnType("int")
                        .HasColumnName("F_Porsant");

                    b.Property<long>("FPrint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("F_Print")
                        .HasDefaultValueSql("(0)");

                    b.Property<long>("FSanad")
                        .HasColumnType("int")
                        .HasColumnName("F_Sanad");

                    b.Property<long>("FSerial")
                        .HasColumnType("int")
                        .HasColumnName("F_Serial");

                    b.Property<string>("FTimeU")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("F_TimeU")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("FUser")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_User");

                    b.HasKey("FFactor");

                    b.HasIndex("FAccEzafat");

                    b.HasIndex("FAccKosorat");

                    b.HasIndex("FAnbar2");

                    b.HasIndex("FMoshtari");

                    b.HasIndex("FPorsant");

                    b.HasIndex("FSanad");

                    b.HasIndex("FKindPay", "FNoPay");

                    b.HasIndex(new[] { "FDate" }, "IX_Factor1");

                    b.HasIndex(new[] { "FNo", "FKind" }, "IX_Factor1_1")
                        .IsUnique();

                    b.HasIndex(new[] { "FAnbar" }, "IX_Factor1_2");

                    b.HasIndex(new[] { "FNo" }, "IX_Factor1_3");

                    b.ToTable("Factor1", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Factor2", b =>
                {
                    b.Property<int>("FkFactor")
                        .HasColumnType("int")
                        .HasColumnName("FK_Factor");

                    b.Property<int>("FkRadif")
                        .HasColumnType("int")
                        .HasColumnName("FK_Radif");

                    b.Property<double?>("FkArz")
                        .HasColumnType("float")
                        .HasColumnName("FK_Arz");

                    b.Property<double?>("FkArze")
                        .HasColumnType("float")
                        .HasColumnName("FK_Arze");

                    b.Property<double?>("FkAvarez")
                        .HasColumnType("float")
                        .HasColumnName("FK_Avarez");

                    b.Property<string>("FkDateModat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("FK_DateModat")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("FkKala")
                        .HasColumnType("int")
                        .HasColumnName("FK_Kala");

                    b.Property<double?>("FkKdarsad")
                        .HasColumnType("float")
                        .HasColumnName("FK_Kdarsad");

                    b.Property<byte?>("FkKindArz")
                        .HasColumnType("tinyint")
                        .HasColumnName("FK_KindArz");

                    b.Property<double?>("FkMab")
                        .HasColumnType("float")
                        .HasColumnName("FK_Mab");

                    b.Property<double?>("FkMaliat")
                        .HasColumnType("float")
                        .HasColumnName("FK_Maliat");

                    b.Property<bool?>("FkModat")
                        .HasColumnType("bit")
                        .HasColumnName("FK_Modat");

                    b.Property<double?>("FkNum")
                        .HasColumnType("float")
                        .HasColumnName("FK_Num");

                    b.Property<long>("FkNumKoli")
                        .HasColumnType("int")
                        .HasColumnName("FK_NumKoli");

                    b.Property<string>("FkSharh")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("FK_Sharh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<short?>("FkTdad")
                        .HasColumnType("smallint")
                        .HasColumnName("FK_Tdad");

                    b.Property<double?>("FkTol")
                        .HasColumnType("float")
                        .HasColumnName("FK_Tol");

                    b.Property<byte?>("FkV")
                        .HasColumnType("tinyint")
                        .HasColumnName("FK_V");

                    b.HasKey("FkFactor", "FkRadif");

                    b.HasIndex(new[] { "FkKala" }, "IX_Factor2");

                    b.ToTable("Factor2", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Ghest", b =>
                {
                    b.Property<int>("GhMoshtari")
                        .HasColumnType("int")
                        .HasColumnName("GH_Moshtari");

                    b.Property<int>("GhNo")
                        .HasColumnType("int")
                        .HasColumnName("GH_No");

                    b.Property<string>("GhCodemeli")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("GH_CODEMELI");

                    b.Property<string>("GhDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("GH_Date")
                        .IsFixedLength();

                    b.Property<string>("GhDateV")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("GH_DateV")
                        .IsFixedLength();

                    b.Property<string>("GhDatevam")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("GH_DATEVAM");

                    b.Property<double?>("GhMab")
                        .HasColumnType("float")
                        .HasColumnName("GH_Mab");

                    b.Property<long>("GhMabkolvam")
                        .HasColumnType("int")
                        .HasColumnName("GH_MABKOLVAM");

                    b.Property<long?>("GhPayment")
                        .HasColumnType("bigint")
                        .HasColumnName("GH_Payment");

                    b.Property<string>("GhShrh")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("GH_Shrh");

                    b.Property<string>("GhVamacc")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("GH_VAMACC")
                        .IsFixedLength();

                    b.HasKey("GhMoshtari", "GhNo");

                    b.ToTable("Ghest", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Goroh", b =>
                {
                    b.Property<byte>("GhCode")
                        .HasColumnType("tinyint")
                        .HasColumnName("GH_Code");

                    b.Property<int>("GhKind")
                        .HasColumnType("int")
                        .HasColumnName("GH_Kind");

                    b.Property<int>("GhMahiat")
                        .HasColumnType("int")
                        .HasColumnName("GH_Mahiat");

                    b.Property<string>("GhName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("GH_Name")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("GhCode");

                    b.HasIndex(new[] { "GhName" }, "IX_Goroh")
                        .IsUnique();

                    b.ToTable("Goroh", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.GorohK", b =>
                {
                    b.Property<int>("GkCode")
                        .HasColumnType("int")
                        .HasColumnName("GK_Code");

                    b.Property<bool?>("GkInForosh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("GK_inForosh")
                        .HasDefaultValueSql("(1)");

                    b.Property<bool?>("GkInKhadmat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("GK_inKhadmat")
                        .HasDefaultValueSql("(1)");

                    b.Property<bool?>("GkInKharid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("GK_inKharid")
                        .HasDefaultValueSql("(1)");

                    b.Property<string>("GkName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GK_Name")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("GkCode")
                        .HasName("PK_GroupK");

                    b.HasIndex(new[] { "GkName" }, "IX_GorohK")
                        .IsUnique()
                        .HasFilter("[GK_Name] IS NOT NULL");

                    b.ToTable("GorohK", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.GorohM", b =>
                {
                    b.Property<int>("GmCode")
                        .HasColumnType("int")
                        .HasColumnName("GM_Code");

                    b.Property<bool?>("GmInForosh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("GM_inForosh")
                        .HasDefaultValueSql("(1)");

                    b.Property<bool?>("GmInKharid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("GM_inKharid")
                        .HasDefaultValueSql("(1)");

                    b.Property<bool?>("GmInPosnt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("GM_inPosnt")
                        .HasDefaultValueSql("(1)");

                    b.Property<string>("GmName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GM_Name")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("GmCode")
                        .HasName("PK_GroupM");

                    b.HasIndex(new[] { "GmName" }, "IX_GorohM")
                        .IsUnique()
                        .HasFilter("[GM_Name] IS NOT NULL");

                    b.ToTable("GorohM", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.GorohT", b =>
                {
                    b.Property<int>("TCode")
                        .HasColumnType("int")
                        .HasColumnName("T_Code");

                    b.Property<string>("TName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("T_Name")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("TCode")
                        .HasName("PK_Table1");

                    b.ToTable("GorohT", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.HsbPrsnsKoli", b =>
                {
                    b.Property<double>("Bed")
                        .HasColumnType("float");

                    b.Property<double>("Bes")
                        .HasColumnType("float");

                    b.Property<short?>("Brws")
                        .HasColumnType("smallint");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("F")
                        .HasColumnType("int");

                    b.Property<long>("F_Factor")
                        .HasColumnType("bigint");

                    b.Property<string>("KindFactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Mande")
                        .HasColumnType("int");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("Sharh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kind")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("HsbPrsnsKolis");
                });

            modelBuilder.Entity("CityInfoApi.Models.InEditFactor", b =>
                {
                    b.Property<int>("FFactor")
                        .HasColumnType("int")
                        .HasColumnName("F_Factor");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<long>("User")
                        .HasColumnType("int");

                    b.HasKey("FFactor");

                    b.ToTable("InEditFactors");
                });

            modelBuilder.Entity("CityInfoApi.Models.InEditKhadamat", b =>
                {
                    b.Property<long>("KhNo")
                        .HasColumnType("bigint")
                        .HasColumnName("Kh_No");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<long>("User")
                        .HasColumnType("int");

                    b.HasKey("KhNo");

                    b.ToTable("InEditKhadamat", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.InEditPayment", b =>
                {
                    b.Property<long>("P1No")
                        .HasColumnType("bigint")
                        .HasColumnName("P1_No");

                    b.Property<byte>("P1Kind")
                        .HasColumnType("tinyint")
                        .HasColumnName("P1_Kind");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<long>("User")
                        .HasColumnType("int");

                    b.HasKey("P1No", "P1Kind")
                        .HasName("PK_InEditPayment");

                    b.HasIndex("P1Kind", "P1No");

                    b.ToTable("InEditPayments");
                });

            modelBuilder.Entity("CityInfoApi.Models.InEditSanad", b =>
                {
                    b.Property<int>("SSanad")
                        .HasColumnType("int")
                        .HasColumnName("S_Sanad");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<long>("User")
                        .HasColumnType("int");

                    b.HasKey("SSanad");

                    b.ToTable("InEditSanads");
                });

            modelBuilder.Entity("CityInfoApi.Models.InEditSefaresh", b =>
                {
                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("S1No")
                        .HasColumnType("int")
                        .HasColumnName("S1_No");

                    b.Property<long>("User")
                        .HasColumnType("int");

                    b.HasIndex("S1No");

                    b.ToTable("InEditSefaresh", (string)null);
                });


            modelBuilder.Entity("CityInfoApi.Models.Kafactor", b =>
                {
                    b.Property<string>("KaFactor1")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("KA_Factor")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KaAcc")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("KA_Acc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("KaDarsad")
                        .HasColumnType("float")
                        .HasColumnName("KA_Darsad");

                    b.Property<bool?>("KaKind")
                        .HasColumnType("bit")
                        .HasColumnName("KA_Kind");

                    b.Property<string>("KaName")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("KA_Name")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("KaSabet")
                        .HasColumnType("float")
                        .HasColumnName("KA_Sabet");

                    b.HasKey("KaFactor1");

                    b.HasIndex("KaAcc");

                    b.HasIndex(new[] { "KaName" }, "IX_KAFactor")
                        .IsUnique()
                        .HasFilter("[KA_Name] IS NOT NULL");

                    b.ToTable("KAFactor", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.KafactorL", b =>
                {
                    b.Property<int>("LFactor")
                        .HasColumnType("int")
                        .HasColumnName("L_Factor");

                    b.Property<string>("LKa")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("L_KA")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("LDarsad")
                        .HasColumnType("float")
                        .HasColumnName("L_Darsad");

                    b.Property<double?>("LSabet")
                        .HasColumnType("float")
                        .HasColumnName("L_Sabet");

                    b.HasKey("LFactor", "LKa");

                    b.HasIndex("LKa");

                    b.ToTable("KAFactorL", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Kala", b =>
                {
                    b.Property<int>("KCode")
                        .HasColumnType("int")
                        .HasColumnName("K_Code");

                    b.Property<byte?>("KArz")
                        .HasColumnType("tinyint")
                        .HasColumnName("K_Arz");

                    b.Property<double?>("KArzMab")
                        .HasColumnType("float")
                        .HasColumnName("K_ArzMab");

                    b.Property<double?>("KAvarez")
                        .HasColumnType("float")
                        .HasColumnName("K_Avarez");

                    b.Property<bool?>("KAvarezIs")
                        .HasColumnType("bit")
                        .HasColumnName("K_AvarezIs");

                    b.Property<string>("KBarcode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("K_Barcode");

                    b.Property<double?>("KDarsad")
                        .HasColumnType("float")
                        .HasColumnName("K_Darsad");

                    b.Property<string>("KFani")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("K_Fani")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KFani2")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("K_fani2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("KFmonth")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth");

                    b.Property<double?>("KFmonth1")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth1");

                    b.Property<double?>("KFmonth10")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth10");

                    b.Property<double?>("KFmonth11")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth11");

                    b.Property<double?>("KFmonth12")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth12");

                    b.Property<double?>("KFmonth2")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth2");

                    b.Property<double?>("KFmonth3")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth3");

                    b.Property<double?>("KFmonth4")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth4");

                    b.Property<double?>("KFmonth5")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth5");

                    b.Property<double?>("KFmonth6")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth6");

                    b.Property<double?>("KFmonth7")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth7");

                    b.Property<double?>("KFmonth8")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth8");

                    b.Property<double?>("KFmonth9")
                        .HasColumnType("float")
                        .HasColumnName("K_FMonth9");

                    b.Property<double?>("KForoshH")
                        .HasColumnType("float")
                        .HasColumnName("K_ForoshH");

                    b.Property<double?>("KForoshM")
                        .HasColumnType("float")
                        .HasColumnName("K_ForoshM");

                    b.Property<long?>("KForoshMd")
                        .HasColumnType("bigint")
                        .HasColumnName("K_ForoshMd");

                    b.Property<long?>("KForoshMsrf")
                        .HasColumnType("bigint")
                        .HasColumnName("K_ForoshMsrf");

                    b.Property<long?>("KForoshN")
                        .HasColumnType("bigint")
                        .HasColumnName("K_ForoshN");

                    b.Property<double?>("KFyear")
                        .HasColumnType("float")
                        .HasColumnName("K_FYear");

                    b.Property<int>("KGoroh")
                        .HasColumnType("int")
                        .HasColumnName("K_Goroh");

                    b.Property<double?>("KHtmam")
                        .HasColumnType("float")
                        .HasColumnName("K_HTmam");

                    b.Property<double?>("KHtolid")
                        .HasColumnType("float")
                        .HasColumnName("K_HTolid");

                    b.Property<bool?>("KIsBarcode")
                        .HasColumnType("bit")
                        .HasColumnName("K_IsBarcode");

                    b.Property<string>("KKeshvar")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("K_Keshvar")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("KLan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("K_Lan")
                        .HasDefaultValueSql("(0)");

                    b.Property<bool?>("KLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("K_Log")
                        .HasDefaultValueSql("(1)");

                    b.Property<double?>("KMaliat")
                        .HasColumnType("float")
                        .HasColumnName("K_Maliat");

                    b.Property<bool?>("KMaliatIs")
                        .HasColumnType("bit")
                        .HasColumnName("K_MaliatIs");

                    b.Property<double?>("KMaxF")
                        .HasColumnType("float")
                        .HasColumnName("K_MaxF");

                    b.Property<double?>("KMinF")
                        .HasColumnType("float")
                        .HasColumnName("K_MinF");

                    b.Property<string>("KName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("K_Name")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KNameL")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("K_NameL")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("KOmde")
                        .HasColumnType("float")
                        .HasColumnName("K_Omde");

                    b.Property<byte[]>("KPic")
                        .HasColumnType("image")
                        .HasColumnName("K_Pic");

                    b.Property<double?>("KPorsant")
                        .HasColumnType("float")
                        .HasColumnName("K_Porsant");

                    b.Property<double?>("KSarbar")
                        .HasColumnType("float")
                        .HasColumnName("K_Sarbar");

                    b.Property<string>("KSharh")
                        .HasColumnType("ntext")
                        .HasColumnName("K_Sharh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("KTolid")
                        .HasColumnType("float")
                        .HasColumnName("K_Tolid");

                    b.Property<string>("KVahed")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("K_Vahed")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KVahedKoli")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("K_VahedKoli")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("KVazn")
                        .HasColumnType("float")
                        .HasColumnName("K_Vazn");

                    b.Property<double?>("KZarib")
                        .HasColumnType("float")
                        .HasColumnName("K_Zarib");

                    b.HasKey("KCode")
                        .HasName("PK_KALA");

                    b.HasIndex("KGoroh");

                    b.HasIndex(new[] { "KName" }, "IX_Kala")
                        .IsUnique()
                        .HasFilter("[K_Name] IS NOT NULL");

                    b.ToTable("Kala", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.KalaM", b =>
                {
                    b.Property<int>("KmCode")
                        .HasColumnType("int")
                        .HasColumnName("KM_Code");

                    b.Property<byte>("KmAnbar")
                        .HasColumnType("tinyint")
                        .HasColumnName("KM_Anbar");

                    b.Property<string>("KKeshvar")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("K_Keshvar")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("KmArzArzesh")
                        .HasColumnType("float")
                        .HasColumnName("KM_ArzArzesh");

                    b.Property<double?>("KmArzesh")
                        .HasColumnType("float")
                        .HasColumnName("KM_Arzesh");

                    b.Property<double?>("KmEndArzArzesh")
                        .HasColumnType("float")
                        .HasColumnName("KM_EndArzArzesh");

                    b.Property<double?>("KmEndArzesh")
                        .HasColumnType("float")
                        .HasColumnName("KM_EndArzesh");

                    b.Property<double?>("KmEndMoj")
                        .HasColumnType("float")
                        .HasColumnName("KM_EndMoj");

                    b.Property<double?>("KmEndMojKol")
                        .HasColumnType("float")
                        .HasColumnName("KM_EndMojKol");

                    b.Property<byte?>("KmKindArz")
                        .HasColumnType("tinyint")
                        .HasColumnName("KM_KindArz");

                    b.Property<long?>("KmLastArzArzesh")
                        .HasColumnType("bigint")
                        .HasColumnName("KM_LastArzArzesh");

                    b.Property<long?>("KmLastArzesh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("KM_LastArzesh")
                        .HasDefaultValueSql("(0)");

                    b.Property<double?>("KmMaxMoj")
                        .HasColumnType("float")
                        .HasColumnName("KM_MaxMoj");

                    b.Property<double?>("KmMinMoj")
                        .HasColumnType("float")
                        .HasColumnName("KM_MinMoj");

                    b.Property<double?>("KmMoj")
                        .HasColumnType("float")
                        .HasColumnName("KM_Moj");

                    b.Property<double?>("KmMojKol")
                        .HasColumnType("float")
                        .HasColumnName("KM_MojKol");

                    b.Property<string>("KmRadif")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("KM_Radif")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("KmSefaresh")
                        .HasColumnType("float")
                        .HasColumnName("KM_Sefaresh");

                    b.Property<double?>("KmShomaresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("KM_Shomaresh")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("KmCode", "KmAnbar");

                    b.HasIndex("KmAnbar");

                    b.ToTable("KalaM", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.KalaT", b =>
                {
                    b.Property<int>("TKala")
                        .HasColumnType("int")
                        .HasColumnName("T_Kala");

                    b.Property<int>("TRadif")
                        .HasColumnType("int")
                        .HasColumnName("T_Radif");

                    b.Property<long>("TKalaItm")
                        .HasColumnType("int")
                        .HasColumnName("T_KalaITM");

                    b.Property<double?>("TMab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("T_Mab")
                        .HasDefaultValueSql("(0)");

                    b.Property<double?>("TNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("T_Num")
                        .HasDefaultValueSql("(0)");

                    b.HasKey("TKala", "TRadif");

                    b.HasIndex("TKalaItm");

                    b.ToTable("KalaT", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Khadamat", b =>
                {
                    b.Property<long>("KhNo")
                        .HasColumnType("bigint")
                        .HasColumnName("Kh_No");

                    b.Property<string>("KhAcc")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("Kh_Acc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Kh_Date")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhDateF")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Kh_DateF")
                        .HasDefaultValueSql("('____/__/__')")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhDateG")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Kh_DateG")
                        .HasDefaultValueSql("('____/__/__')")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhDateT")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Kh_DateT")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhDateU")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Kh_DateU")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("KhFactor")
                        .HasColumnType("int")
                        .HasColumnName("Kh_Factor");

                    b.Property<double?>("KhGhatat")
                        .HasColumnType("float")
                        .HasColumnName("Kh_Ghatat");

                    b.Property<string>("KhKalaName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Kh_KalaName")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhKind")
                        .HasColumnType("text")
                        .HasColumnName("Kh_Kind")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("KhKindPay")
                        .HasColumnType("tinyint")
                        .HasColumnName("Kh_KindPay");

                    b.Property<byte>("KhMarkaz")
                        .HasColumnType("tinyint")
                        .HasColumnName("Kh_Markaz");

                    b.Property<string>("KhMname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Kh_MName")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("KhMoshtari")
                        .HasColumnType("int")
                        .HasColumnName("Kh_Moshtari");

                    b.Property<string>("KhMotealegh")
                        .HasColumnType("text")
                        .HasColumnName("Kh_Motealegh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("KhNoPay")
                        .HasColumnType("bigint")
                        .HasColumnName("Kh_NoPay");

                    b.Property<double?>("KhOjrat")
                        .HasColumnType("float")
                        .HasColumnName("Kh_Ojrat");

                    b.Property<long>("KhSanad")
                        .HasColumnType("int")
                        .HasColumnName("Kh_Sanad");

                    b.Property<string>("KhSerial")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Kh_Serial")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhSerial2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Kh_Serial2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhShrh")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Kh_Shrh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhShrh2")
                        .HasColumnType("text")
                        .HasColumnName("Kh_Shrh2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("KhSum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("Kh_Sum")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("KhTimeU")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("Kh_TimeU")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("KhUser")
                        .HasColumnType("int")
                        .HasColumnName("Kh_User");

                    b.HasKey("KhNo");

                    b.HasIndex("KhAcc");

                    b.HasIndex("KhMoshtari");

                    b.HasIndex("KhSanad");

                    b.HasIndex("KhKindPay", "KhNoPay");

                    b.ToTable("Khadamat", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Mantagh", b =>
                {
                    b.Property<int>("CodeMantagh")
                        .HasColumnType("int")
                        .HasColumnName("Code_Mantagh");

                    b.Property<string>("NameMantagh")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Name_Mantagh")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("CodeMantagh")
                        .HasName("PK__Mantagh__2F650636");

                    b.ToTable("Mantagh", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Moshtari", b =>
                {
                    b.Property<int>("MCode")
                        .HasColumnType("int")
                        .HasColumnName("M_Code");

                    b.Property<string>("MAcc")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("M_Acc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("M_Address")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("MAtbar")
                        .HasColumnType("bigint")
                        .HasColumnName("M_Atbar");

                    b.Property<string>("MCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("M_City")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("MCodeMantagh")
                        .HasColumnType("int")
                        .HasColumnName("M_CodeMantagh");

                    b.Property<string>("MDateList")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("M_DateList")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MEconomy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("M_Economy")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("M_Email")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("MGoroh")
                        .HasColumnType("int")
                        .HasColumnName("M_Goroh");

                    b.Property<byte?>("MHmkar")
                        .HasColumnType("tinyint")
                        .HasColumnName("M_Hmkar");

                    b.Property<string>("MKol")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("M_Kol")
                        .IsFixedLength();

                    b.Property<byte?>("MLan")
                        .HasColumnType("tinyint")
                        .HasColumnName("M_Lan");

                    b.Property<bool?>("MLog")
                        .HasColumnType("bit")
                        .HasColumnName("M_Log");

                    b.Property<bool?>("MLogHsab")
                        .HasColumnType("bit")
                        .HasColumnName("M_LogHsab");

                    b.Property<string>("MMeli")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("M_Meli");

                    b.Property<string>("MMobil")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("M_Mobil")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MMobile2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("M_Mobile2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool>("MModir")
                        .HasColumnType("bit")
                        .HasColumnName("M_MODIR");

                    b.Property<string>("MMoein")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("M_Moein")
                        .IsFixedLength();

                    b.Property<string>("MName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("M_Name")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MNameL")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("M_NameL")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("MOnvan")
                        .HasColumnType("tinyint")
                        .HasColumnName("M_Onvan");

                    b.Property<string>("MOstan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("M_Ostan")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte[]>("MPic")
                        .HasColumnType("image")
                        .HasColumnName("M_Pic");

                    b.Property<double?>("MPorsant")
                        .HasColumnType("float")
                        .HasColumnName("M_Porsant");

                    b.Property<string>("MPost")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("M_Post")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MSabt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("M_SABT")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MTel1")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("M_Tel1");

                    b.Property<string>("MTel2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("M_Tel2");

                    b.Property<string>("MTel3")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("M_Tel3")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MTel4")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("M_Tel4")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("MTelSms")
                        .HasColumnType("bit")
                        .HasColumnName("M_TelSMS");

                    b.Property<string>("MTfzili")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("M_Tfzili")
                        .IsFixedLength();

                    b.Property<string>("MTxt")
                        .HasColumnType("text")
                        .HasColumnName("M_Txt")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("MCode")
                        .HasName("PK_MOSHTARI");

                    b.HasIndex("MAcc");

                    b.HasIndex("MGoroh");

                    b.HasIndex(new[] { "MName" }, "IX_Moshtari")
                        .IsUnique()
                        .HasFilter("[M_Name] IS NOT NULL");

                    b.ToTable("Moshtari", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.MoshtariTkmili", b =>
                {
                    b.Property<int>("MCodeM")
                        .HasColumnType("int")
                        .HasColumnName("M_CodeM");

                    b.Property<string>("MAddressKar")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("M_AddressKar")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MAddressMnzl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("M_AddressMnzl")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MDateEnd")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("M_DateEnd")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MDateFirst")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("M_DateFirst")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MFather")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("M_Father")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MSadere")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("M_Sadere")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MShnasnameh")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("M_Shnasnameh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MTavalod")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("M_Tavalod")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MVsighe")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("M_Vsighe")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("M_Zmn1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn1Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("M_Zmn1Address")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn1CodeMli")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("M_Zmn1CodeMli")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn1Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("M_Zmn1Tel")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn1Vsighe")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("M_Zmn1Vsighe")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("M_Zmn2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn2Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("M_Zmn2Address")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn2CodeMli")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("M_Zmn2CodeMli")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn2Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("M_Zmn2Tel")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn2Vsighe")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("M_Zmn2Vsighe")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("M_Zmn3")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn3Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("M_Zmn3Address")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn3CodeMli")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("M_Zmn3CodeMli")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn3Tel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("M_Zmn3Tel")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("MZmn3Vsighe")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("M_Zmn3Vsighe")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("MCodeM");

                    b.ToTable("MoshtariTkmili", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.NoteBook", b =>
                {
                    b.Property<string>("Date")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .UseCollation("Arabic_CI_AI");

                    b.ToTable("NoteBook", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Onvan", b =>
                {
                    b.Property<string>("OAcc")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("O_Acc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("OArzBed")
                        .HasColumnType("float")
                        .HasColumnName("O_ArzBed");

                    b.Property<double?>("OArzBes")
                        .HasColumnType("float")
                        .HasColumnName("O_ArzBes");

                    b.Property<long?>("OBed")
                        .HasColumnType("bigint")
                        .HasColumnName("O_Bed");

                    b.Property<byte?>("OBedBes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("O_BedBes")
                        .HasDefaultValueSql("(0)");

                    b.Property<long?>("OBes")
                        .HasColumnType("bigint")
                        .HasColumnName("O_Bes");

                    b.Property<bool?>("OFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("O_Flag")
                        .HasDefaultValueSql("(1)");

                    b.Property<byte?>("OGoroh")
                        .HasColumnType("tinyint")
                        .HasColumnName("O_Goroh");

                    b.Property<bool?>("OInUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("O_InUsed")
                        .HasDefaultValueSql("(0)");

                    b.Property<int>("OKind")
                        .HasColumnType("int")
                        .HasColumnName("O_Kind");

                    b.Property<string>("OKol")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("O_Kol")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("OMoein")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("O_Moein")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("OName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("O_Name")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<short?>("ONoDarayi")
                        .HasColumnType("smallint")
                        .HasColumnName("O_NoDarayi");

                    b.Property<long>("OSanad")
                        .HasColumnType("int")
                        .HasColumnName("O_Sanad");

                    b.Property<bool>("OSub")
                        .HasColumnType("bit")
                        .HasColumnName("O_Sub");

                    b.Property<bool?>("OTemp")
                        .HasColumnType("bit")
                        .HasColumnName("O_Temp");

                    b.Property<string>("OTfzili")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("O_Tfzili")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("OAcc");

                    b.HasIndex("OGoroh");

                    b.ToTable("Onvan", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Payment1", b =>
                {
                    b.Property<byte>("P1Kind")
                        .HasColumnType("tinyint")
                        .HasColumnName("P1_Kind");

                    b.Property<long>("P1No")
                        .HasColumnType("bigint")
                        .HasColumnName("P1_No");

                    b.Property<string>("P1Acc1")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("P1_Acc1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("P1Acc2")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("P1_Acc2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("P1Date")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("P1_Date")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("P1DateU")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("P1_DateU")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool?>("P1IsArz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("P1_IsArz")
                        .HasDefaultValueSql("(0)");

                    b.Property<byte?>("P1Markaz")
                        .HasColumnType("tinyint")
                        .HasColumnName("P1_Markaz");

                    b.Property<long>("P1Moshtari")
                        .HasColumnType("int")
                        .HasColumnName("P1_Moshtari");

                    b.Property<long>("P1Sanad")
                        .HasColumnType("int")
                        .HasColumnName("P1_Sanad");

                    b.Property<double?>("P1Sum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("P1_Sum")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("P1TimeU")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("P1_TimeU")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("P1User")
                        .HasColumnType("int")
                        .HasColumnName("P1_User");

                    b.HasKey("P1Kind", "P1No");

                    b.HasIndex("P1Acc1");

                    b.HasIndex("P1Acc2");

                    b.HasIndex("P1Moshtari");

                    b.HasIndex("P1Sanad");

                    b.ToTable("Payment1", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Payment2", b =>
                {
                    b.Property<byte>("P2Kind")
                        .HasColumnType("tinyint")
                        .HasColumnName("P2_Kind");

                    b.Property<long>("P2No")
                        .HasColumnType("bigint")
                        .HasColumnName("P2_No");

                    b.Property<int>("P2Radif")
                        .HasColumnType("int")
                        .HasColumnName("P2_Radif");

                    b.Property<string>("P2Acc")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("P2_Acc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("P2Acc2")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("P2_Acc2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("P2ArzKol")
                        .HasColumnType("float")
                        .HasColumnName("P2_ArzKol");

                    b.Property<double?>("P2ArzMab")
                        .HasColumnType("float")
                        .HasColumnName("P2_ArzMab");

                    b.Property<byte?>("P2ArzType")
                        .HasColumnType("tinyint")
                        .HasColumnName("P2_ArzType");

                    b.Property<long?>("P2Check")
                        .HasColumnType("bigint")
                        .HasColumnName("P2_Check");

                    b.Property<short?>("P2KindC")
                        .HasColumnType("smallint")
                        .HasColumnName("P2_KindC");

                    b.Property<byte?>("P2KindP")
                        .HasColumnType("tinyint")
                        .HasColumnName("P2_KindP");

                    b.Property<double?>("P2Mab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("P2_Mab")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("P2Shrh")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("P2_Shrh")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("P2Kind", "P2No", "P2Radif");

                    b.HasIndex("P2Acc");

                    b.HasIndex("P2Acc2");

                    b.HasIndex("P2Check");

                    b.ToTable("Payment2", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Rfactor1", b =>
                {
                    b.Property<long>("RNo")
                        .HasColumnType("bigint")
                        .HasColumnName("R_No");

                    b.Property<string>("FAccAnbar")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("F_AccAnbar")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FAccEzafat")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("F_AccEzafat")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FAccKosorat")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("F_AccKosorat")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte>("FAnbar")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_Anbar");

                    b.Property<byte?>("FAnbar2")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_Anbar2");

                    b.Property<double?>("FAvarez")
                        .HasColumnType("float")
                        .HasColumnName("F_Avarez");

                    b.Property<string>("FDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("F_Date")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FDateA")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("F_DateA")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FDateTahvil")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("F_DateTahvil")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FDateU")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("F_DateU")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("FDriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("F_DriverName")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("FEzafat")
                        .HasColumnType("float")
                        .HasColumnName("F_Ezafat");

                    b.Property<int>("FFactor")
                        .HasColumnType("int")
                        .HasColumnName("F_Factor");

                    b.Property<bool?>("FFixEzafat")
                        .HasColumnType("bit")
                        .HasColumnName("F_FixEzafat");

                    b.Property<bool?>("FFixKosorat")
                        .HasColumnType("bit")
                        .HasColumnName("F_FixKosorat");

                    b.Property<bool?>("FFixPorsant")
                        .HasColumnType("bit")
                        .HasColumnName("F_FixPorsant");

                    b.Property<bool?>("FFlag")
                        .HasColumnType("bit")
                        .HasColumnName("F_Flag");

                    b.Property<bool?>("FKdarsad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("F_Kdarsad")
                        .HasDefaultValueSql("(0)");

                    b.Property<byte>("FKind")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_Kind");

                    b.Property<byte?>("FKindPay")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_KindPay");

                    b.Property<double?>("FKosor")
                        .HasColumnType("float")
                        .HasColumnName("F_Kosor");

                    b.Property<double?>("FMab")
                        .HasColumnType("float")
                        .HasColumnName("F_Mab");

                    b.Property<double?>("FMabKol")
                        .HasColumnType("float")
                        .HasColumnName("F_MabKol");

                    b.Property<double?>("FMabPorsant")
                        .HasColumnType("float")
                        .HasColumnName("F_MabPorsant");

                    b.Property<double?>("FMaliat")
                        .HasColumnType("float")
                        .HasColumnName("F_Maliat");

                    b.Property<long>("FMoshtari")
                        .HasColumnType("int")
                        .HasColumnName("F_Moshtari");

                    b.Property<byte>("FMrkaz")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_Mrkaz");

                    b.Property<int>("FNo")
                        .HasColumnType("int")
                        .HasColumnName("F_No");

                    b.Property<long?>("FNoPay")
                        .HasColumnType("bigint")
                        .HasColumnName("F_NoPay");

                    b.Property<long>("FPorsant")
                        .HasColumnType("int")
                        .HasColumnName("F_Porsant");

                    b.Property<long>("FPrint")
                        .HasColumnType("int")
                        .HasColumnName("F_Print");

                    b.Property<long>("FSanad")
                        .HasColumnType("int")
                        .HasColumnName("F_Sanad");

                    b.Property<long>("FSerial")
                        .HasColumnType("int")
                        .HasColumnName("F_Serial");

                    b.Property<string>("FTimeU")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("F_TimeU")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("FUser")
                        .HasColumnType("tinyint")
                        .HasColumnName("F_User");

                    b.HasKey("RNo");

                    b.ToTable("RFactor1", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Rfactor2", b =>
                {
                    b.Property<double?>("FkArz")
                        .HasColumnType("float")
                        .HasColumnName("FK_Arz");

                    b.Property<double?>("FkArze")
                        .HasColumnType("float")
                        .HasColumnName("FK_Arze");

                    b.Property<double?>("FkAvarez")
                        .HasColumnType("float")
                        .HasColumnName("FK_Avarez");

                    b.Property<string>("FkDateModat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("FK_DateModat")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("FkFactor")
                        .HasColumnType("int")
                        .HasColumnName("FK_Factor");

                    b.Property<long>("FkKala")
                        .HasColumnType("int")
                        .HasColumnName("FK_Kala");

                    b.Property<double?>("FkKdarsad")
                        .HasColumnType("float")
                        .HasColumnName("FK_Kdarsad");

                    b.Property<byte?>("FkKindArz")
                        .HasColumnType("tinyint")
                        .HasColumnName("FK_KindArz");

                    b.Property<double?>("FkMab")
                        .HasColumnType("float")
                        .HasColumnName("FK_Mab");

                    b.Property<double?>("FkMaliat")
                        .HasColumnType("float")
                        .HasColumnName("FK_Maliat");

                    b.Property<bool?>("FkModat")
                        .HasColumnType("bit")
                        .HasColumnName("FK_Modat");

                    b.Property<double?>("FkNum")
                        .HasColumnType("float")
                        .HasColumnName("FK_Num");

                    b.Property<long>("FkNumKoli")
                        .HasColumnType("int")
                        .HasColumnName("FK_NumKoli");

                    b.Property<int>("FkRadif")
                        .HasColumnType("int")
                        .HasColumnName("FK_Radif");

                    b.Property<string>("FkSharh")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("FK_Sharh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<short?>("FkTdad")
                        .HasColumnType("smallint")
                        .HasColumnName("FK_Tdad");

                    b.Property<double?>("FkTol")
                        .HasColumnType("float")
                        .HasColumnName("FK_Tol");

                    b.Property<byte?>("FkV")
                        .HasColumnType("tinyint")
                        .HasColumnName("FK_V");

                    b.Property<long?>("RNo")
                        .HasColumnType("bigint")
                        .HasColumnName("R_No");

                    b.HasIndex("RNo");

                    b.ToTable("RFactor2", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Rkhadamat", b =>
                {
                    b.Property<long>("RNo")
                        .HasColumnType("bigint")
                        .HasColumnName("R_No");

                    b.Property<string>("KhAcc")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("Kh_Acc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Kh_Date")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhDateF")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Kh_DateF")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhDateG")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Kh_DateG")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhDateT")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Kh_DateT")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhDateU")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Kh_DateU")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("KhFactor")
                        .HasColumnType("int")
                        .HasColumnName("Kh_Factor");

                    b.Property<double?>("KhGhatat")
                        .HasColumnType("float")
                        .HasColumnName("Kh_Ghatat");

                    b.Property<string>("KhKalaName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Kh_KalaName")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhKind")
                        .HasColumnType("text")
                        .HasColumnName("Kh_Kind")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<byte?>("KhKindPay")
                        .HasColumnType("tinyint")
                        .HasColumnName("Kh_KindPay");

                    b.Property<byte?>("KhMarkaz")
                        .HasColumnType("tinyint")
                        .HasColumnName("Kh_Markaz");

                    b.Property<string>("KhMname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Kh_MName")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("KhMoshtari")
                        .HasColumnType("int")
                        .HasColumnName("Kh_Moshtari");

                    b.Property<string>("KhMotealegh")
                        .HasColumnType("text")
                        .HasColumnName("Kh_Motealegh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("KhNo")
                        .HasColumnType("bigint")
                        .HasColumnName("Kh_No");

                    b.Property<long?>("KhNoPay")
                        .HasColumnType("bigint")
                        .HasColumnName("Kh_NoPay");

                    b.Property<double?>("KhOjrat")
                        .HasColumnType("float")
                        .HasColumnName("Kh_Ojrat");

                    b.Property<long>("KhSanad")
                        .HasColumnType("int")
                        .HasColumnName("Kh_Sanad");

                    b.Property<string>("KhSerial")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Kh_Serial")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhSerial2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Kh_Serial2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhShrh")
                        .HasColumnType("text")
                        .HasColumnName("Kh_Shrh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("KhShrh2")
                        .HasColumnType("text")
                        .HasColumnName("Kh_Shrh2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("KhSum")
                        .HasColumnType("float")
                        .HasColumnName("Kh_Sum");

                    b.Property<string>("KhTimeU")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("Kh_TimeU")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("KhUser")
                        .HasColumnType("int")
                        .HasColumnName("Kh_User");

                    b.HasKey("RNo");

                    b.ToTable("RKhadamat", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Rpayment1", b =>
                {
                    b.Property<long>("RNo")
                        .HasColumnType("bigint")
                        .HasColumnName("R_No");

                    b.Property<string>("P1Acc1")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("P1_Acc1")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("P1Acc2")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("P1_Acc2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("P1Date")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("P1_Date")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("P1DateU")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("P1_DateU")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool>("P1IsArz")
                        .HasColumnType("bit")
                        .HasColumnName("P1_IsArz");

                    b.Property<byte>("P1Kind")
                        .HasColumnType("tinyint")
                        .HasColumnName("P1_Kind");

                    b.Property<byte?>("P1Markaz")
                        .HasColumnType("tinyint")
                        .HasColumnName("P1_Markaz");

                    b.Property<long>("P1Moshtari")
                        .HasColumnType("int")
                        .HasColumnName("P1_Moshtari");

                    b.Property<long>("P1No")
                        .HasColumnType("bigint")
                        .HasColumnName("P1_No");

                    b.Property<long>("P1Sanad")
                        .HasColumnType("int")
                        .HasColumnName("P1_Sanad");

                    b.Property<double?>("P1Sum")
                        .HasColumnType("float")
                        .HasColumnName("P1_Sum");

                    b.Property<string>("P1TimeU")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("P1_TimeU")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("P1User")
                        .HasColumnType("int")
                        .HasColumnName("P1_User");

                    b.HasKey("RNo");

                    b.ToTable("RPayment1", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Rpayment2", b =>
                {
                    b.Property<string>("P2Acc")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("P2_Acc")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("P2Acc2")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("P2_Acc2")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("P2ArzKol")
                        .HasColumnType("float")
                        .HasColumnName("P2_ArzKol");

                    b.Property<double?>("P2ArzMab")
                        .HasColumnType("float")
                        .HasColumnName("P2_ArzMab");

                    b.Property<byte?>("P2ArzType")
                        .HasColumnType("tinyint")
                        .HasColumnName("P2_ArzType");

                    b.Property<long>("P2Check")
                        .HasColumnType("int")
                        .HasColumnName("P2_Check");

                    b.Property<byte>("P2Kind")
                        .HasColumnType("tinyint")
                        .HasColumnName("P2_Kind");

                    b.Property<short?>("P2KindC")
                        .HasColumnType("smallint")
                        .HasColumnName("P2_KindC");

                    b.Property<byte?>("P2KindP")
                        .HasColumnType("tinyint")
                        .HasColumnName("P2_KindP");

                    b.Property<double?>("P2Mab")
                        .HasColumnType("float")
                        .HasColumnName("P2_Mab");

                    b.Property<long>("P2No")
                        .HasColumnType("bigint")
                        .HasColumnName("P2_No");

                    b.Property<int>("P2Radif")
                        .HasColumnType("int")
                        .HasColumnName("P2_Radif");

                    b.Property<string>("P2Shrh")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("P2_Shrh")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long?>("RNo")
                        .HasColumnType("bigint")
                        .HasColumnName("R_No");

                    b.HasIndex("RNo");

                    b.ToTable("RPayment2", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Rsanad", b =>
                {
                    b.Property<long>("RNo")
                        .HasColumnType("bigint")
                        .HasColumnName("R_No");

                    b.Property<string>("SDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("S_Date")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SDateU")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("S_DateU")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool>("SFlag")
                        .HasColumnType("bit")
                        .HasColumnName("S_Flag");

                    b.Property<bool>("SInEdit")
                        .HasColumnType("bit")
                        .HasColumnName("S_InEdit");

                    b.Property<bool>("SIsArz")
                        .HasColumnType("bit")
                        .HasColumnName("S_IsArz");

                    b.Property<byte?>("SMarkaz")
                        .HasColumnType("tinyint")
                        .HasColumnName("S_Markaz");

                    b.Property<int>("SNo")
                        .HasColumnType("int")
                        .HasColumnName("S_No");

                    b.Property<long>("SPrint")
                        .HasColumnType("int")
                        .HasColumnName("S_Print");

                    b.Property<int>("SSanad")
                        .HasColumnType("int")
                        .HasColumnName("S_Sanad");

                    b.Property<bool?>("STemp")
                        .HasColumnType("bit")
                        .HasColumnName("S_Temp");

                    b.Property<string>("STimeU")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("S_TimeU")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("S_Type")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("SUser")
                        .HasColumnType("int")
                        .HasColumnName("S_User");

                    b.HasKey("RNo");

                    b.ToTable("RSanad", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.RsanadItm", b =>
                {
                    b.Property<byte?>("ACode")
                        .HasColumnType("tinyint")
                        .HasColumnName("A_Code");

                    b.Property<string>("Acc")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("ArzBed")
                        .HasColumnType("float");

                    b.Property<double?>("ArzBes")
                        .HasColumnType("float");

                    b.Property<double?>("ArzKol")
                        .HasColumnType("float");

                    b.Property<long>("BBar")
                        .HasColumnType("int")
                        .HasColumnName("B_bar");

                    b.Property<double>("Bed")
                        .HasColumnType("float");

                    b.Property<double>("Bes")
                        .HasColumnType("float");

                    b.Property<long>("FFactor")
                        .HasColumnType("int")
                        .HasColumnName("F_Factor");

                    b.Property<long>("HHesab")
                        .HasColumnType("int")
                        .HasColumnName("H_Hesab");

                    b.Property<long?>("KhKhadamat")
                        .HasColumnType("bigint")
                        .HasColumnName("Kh_Khadamat");

                    b.Property<byte?>("PKind")
                        .HasColumnType("tinyint")
                        .HasColumnName("P_Kind");

                    b.Property<long?>("PPayment")
                        .HasColumnType("bigint")
                        .HasColumnName("P_Payment");

                    b.Property<long>("RNo")
                        .HasColumnType("bigint")
                        .HasColumnName("R_No");

                    b.Property<int>("Radif")
                        .HasColumnType("int");

                    b.Property<int>("SSanad")
                        .HasColumnType("int")
                        .HasColumnName("S_Sanad");

                    b.Property<string>("Sharh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasIndex("RNo");

                    b.ToTable("RSanadITM", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Sanad", b =>
                {
                    b.Property<int>("SSanad")
                        .HasColumnType("int")
                        .HasColumnName("S_Sanad");

                    b.Property<string>("SDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("S_Date")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SDateU")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("S_DateU")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool>("SFlag")
                        .HasColumnType("bit")
                        .HasColumnName("S_Flag");

                    b.Property<bool>("SInEdit")
                        .HasColumnType("bit")
                        .HasColumnName("S_InEdit");

                    b.Property<bool>("SIsArz")
                        .HasColumnType("bit")
                        .HasColumnName("S_IsArz");

                    b.Property<byte?>("SMarkaz")
                        .HasColumnType("tinyint")
                        .HasColumnName("S_Markaz");

                    b.Property<int>("SNo")
                        .HasColumnType("int")
                        .HasColumnName("S_No");

                    b.Property<long>("SPrint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("S_Print")
                        .HasDefaultValueSql("(0)");

                    b.Property<bool?>("STemp")
                        .HasColumnType("bit")
                        .HasColumnName("S_Temp");

                    b.Property<string>("STimeU")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("S_TimeU")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("S_Type")
                        .HasDefaultValueSql("('H')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<long>("SUser")
                        .HasColumnType("int")
                        .HasColumnName("S_User");

                    b.HasKey("SSanad");

                    b.HasIndex(new[] { "SNo" }, "IX_Sanad");

                    b.HasIndex(new[] { "SDate" }, "IX_Sanad_1");

                    b.ToTable("Sanad", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Sanad1400", b =>
                {
                    b.Property<int>("s_date")
                        .HasColumnType("int");

                    b.Property<int>("s_user")
                        .HasColumnType("int");

                    b.ToTable("Sanad1400s");
                });

            modelBuilder.Entity("CityInfoApi.Models.SanadItm", b =>
                {
                    b.Property<int>("SSanad")
                        .HasColumnType("int")
                        .HasColumnName("S_Sanad");

                    b.Property<int>("Radif")
                        .HasColumnType("int");

                    b.Property<byte?>("ACode")
                        .HasColumnType("tinyint")
                        .HasColumnName("A_Code");

                    b.Property<string>("Acc")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<double?>("ArzBed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("(0)");

                    b.Property<double?>("ArzBes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("(0)");

                    b.Property<double?>("ArzKol")
                        .HasColumnType("float");

                    b.Property<long>("BBar")
                        .HasColumnType("int")
                        .HasColumnName("B_bar");

                    b.Property<double>("Bed")
                        .HasColumnType("float");

                    b.Property<double>("Bes")
                        .HasColumnType("float");

                    b.Property<long>("FFactor")
                        .HasColumnType("int")
                        .HasColumnName("F_Factor");

                    b.Property<long>("HHesab")
                        .HasColumnType("int")
                        .HasColumnName("H_Hesab");

                    b.Property<long?>("KhKhadamat")
                        .HasColumnType("bigint")
                        .HasColumnName("Kh_Khadamat");

                    b.Property<byte?>("PKind")
                        .HasColumnType("tinyint")
                        .HasColumnName("P_Kind");

                    b.Property<long?>("PPayment")
                        .HasColumnType("bigint")
                        .HasColumnName("P_Payment");

                    b.Property<string>("Sharh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("SSanad", "Radif");

                    b.HasIndex("FFactor");

                    b.HasIndex("KhKhadamat");

                    b.HasIndex("PKind", "PPayment");

                    b.HasIndex(new[] { "Acc" }, "IX_Check")
                        .HasDatabaseName("IX_Check1");

                    b.ToTable("SanadITM", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Sefaresh1", b =>
                {
                    b.Property<int>("S1No")
                        .HasColumnType("int")
                        .HasColumnName("S1_No");

                    b.Property<string>("S1Date")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("S1_Date")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("S1Foroshande")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("S1_Foroshande")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<bool>("S1Kind")
                        .HasColumnType("bit")
                        .HasColumnName("S1_Kind");

                    b.Property<byte>("S1Mrkaz")
                        .HasColumnType("tinyint")
                        .HasColumnName("S1_Mrkaz");

                    b.Property<int>("S1User")
                        .HasColumnType("int")
                        .HasColumnName("S1_User");

                    b.Property<string>("S1Vahed")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("S1_Vahed")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("S1No")
                        .HasName("PK_Sefaresh1_1");

                    b.ToTable("Sefaresh1", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Sefaresh2", b =>
                {
                    b.Property<int>("S2No")
                        .HasColumnType("int")
                        .HasColumnName("S2_No");

                    b.Property<short>("S2Radif")
                        .HasColumnType("smallint")
                        .HasColumnName("S2_Radif");

                    b.Property<string>("S2DateE")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("S2_DateE")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("S2DateR")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("S2_DateR")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<int>("S2Kala")
                        .HasColumnType("int")
                        .HasColumnName("S2_Kala");

                    b.Property<byte>("S2Kind")
                        .HasColumnType("tinyint")
                        .HasColumnName("S2_Kind");

                    b.Property<double>("S2Num")
                        .HasColumnType("float")
                        .HasColumnName("S2_Num");

                    b.Property<double?>("S2Num2")
                        .HasColumnType("float")
                        .HasColumnName("S2_Num2");

                    b.Property<string>("S2Shrh")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("S2_Shrh")
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("S2No", "S2Radif");

                    b.HasIndex("S2Kala");

                    b.ToTable("Sefaresh2", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Sm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasDefaultValueSql("('____/__/__')")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("CreateTime")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DeliverDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DeliverMessage")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DeliverStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("DeliverTime")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SendDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("SendTime")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Txt")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("txt")
                        .UseCollation("Arabic_CI_AI");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength()
                        .UseCollation("Arabic_CI_AI");

                    b.HasKey("Id");

                    b.ToTable("SMS", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Vahed", b =>
                {
                    b.Property<int>("VCode")
                        .HasColumnType("int")
                        .HasColumnName("V_Code");

                    b.Property<string>("VName")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("V_Name")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("VCode")
                        .HasName("PK_VAHED");

                    b.HasIndex(new[] { "VName" }, "IX_Vahed")
                        .IsUnique();

                    b.ToTable("Vahed", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.View1", b =>
                {
                    b.Property<byte>("ACode")
                        .HasColumnType("tinyint")
                        .HasColumnName("A_Code");

                    b.ToView("VIEW1");
                });

            modelBuilder.Entity("Tashaboh", b =>
                {
                    b.Property<int>("TCode")
                        .HasColumnType("int")
                        .HasColumnName("T_Code");

                    b.Property<int>("KCode")
                        .HasColumnType("int")
                        .HasColumnName("K_Code");

                    b.HasKey("TCode", "KCode");

                    b.HasIndex("KCode");

                    b.ToTable("Tashaboh", (string)null);
                });

            modelBuilder.Entity("CityInfoApi.Models.Anbar", b =>
                {
                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc1Navigation")
                        .WithMany("AnbarAAcc1Navigations")
                        .HasForeignKey("AAcc1")
                        .HasConstraintName("FK_Anbar_Onvan");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc10Navigation")
                        .WithMany("AnbarAAcc10Navigations")
                        .HasForeignKey("AAcc10")
                        .HasConstraintName("FK_Anbar_Onvan7");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc11Navigation")
                        .WithMany("AnbarAAcc11Navigations")
                        .HasForeignKey("AAcc11")
                        .HasConstraintName("FK_Anbar_Onvan8");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc12Navigation")
                        .WithMany("AnbarAAcc12Navigations")
                        .HasForeignKey("AAcc12")
                        .HasConstraintName("FK_Anbar_Onvan9");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc13Navigation")
                        .WithMany("AnbarAAcc13Navigations")
                        .HasForeignKey("AAcc13")
                        .HasConstraintName("FK_Anbar_Onvan10");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc14Navigation")
                        .WithMany("AnbarAAcc14Navigations")
                        .HasForeignKey("AAcc14")
                        .HasConstraintName("FK_Anbar_Onvan11");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc16Navigation")
                        .WithMany("AnbarAAcc16Navigations")
                        .HasForeignKey("AAcc16")
                        .HasConstraintName("FK__Anbar__A_Acc16__407061FE");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc19Navigation")
                        .WithMany("AnbarAAcc19Navigations")
                        .HasForeignKey("AAcc19")
                        .HasConstraintName("FK_Anbar_Onvan4");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc2Navigation")
                        .WithMany("AnbarAAcc2Navigations")
                        .HasForeignKey("AAcc2")
                        .HasConstraintName("FK_Anbar_Onvan12");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc22Navigation")
                        .WithMany("AnbarAAcc22Navigations")
                        .HasForeignKey("AAcc22")
                        .HasConstraintName("FK_Anbar_Onvan13");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc23Navigation")
                        .WithMany("AnbarAAcc23Navigations")
                        .HasForeignKey("AAcc23")
                        .HasConstraintName("FK_Anbar_Onvan14");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc24Navigation")
                        .WithMany("AnbarAAcc24Navigations")
                        .HasForeignKey("AAcc24")
                        .HasConstraintName("FK_Anbar_Onvan15");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc3Navigation")
                        .WithMany("AnbarAAcc3Navigations")
                        .HasForeignKey("AAcc3")
                        .HasConstraintName("FK_Anbar_Onvan1");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc4Navigation")
                        .WithMany("AnbarAAcc4Navigations")
                        .HasForeignKey("AAcc4")
                        .HasConstraintName("FK_Anbar_Onvan2");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc5Navigation")
                        .WithMany("AnbarAAcc5Navigations")
                        .HasForeignKey("AAcc5")
                        .HasConstraintName("FK_Anbar_Onvan3");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc6Navigation")
                        .WithMany("AnbarAAcc6Navigations")
                        .HasForeignKey("AAcc6")
                        .HasConstraintName("FK_Anbar_Onvan5");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc7Navigation")
                        .WithMany("AnbarAAcc7Navigations")
                        .HasForeignKey("AAcc7")
                        .HasConstraintName("FK__Anbar__A_Acc7__41648637");

                    b.HasOne("CityInfoApi.Models.Onvan", "AAcc9Navigation")
                        .WithMany("AnbarAAcc9Navigations")
                        .HasForeignKey("AAcc9")
                        .HasConstraintName("FK_Anbar_Onvan6");

                    b.Navigation("AAcc10Navigation");

                    b.Navigation("AAcc11Navigation");

                    b.Navigation("AAcc12Navigation");

                    b.Navigation("AAcc13Navigation");

                    b.Navigation("AAcc14Navigation");

                    b.Navigation("AAcc16Navigation");

                    b.Navigation("AAcc19Navigation");

                    b.Navigation("AAcc1Navigation");

                    b.Navigation("AAcc22Navigation");

                    b.Navigation("AAcc23Navigation");

                    b.Navigation("AAcc24Navigation");

                    b.Navigation("AAcc2Navigation");

                    b.Navigation("AAcc3Navigation");

                    b.Navigation("AAcc4Navigation");

                    b.Navigation("AAcc5Navigation");

                    b.Navigation("AAcc6Navigation");

                    b.Navigation("AAcc7Navigation");

                    b.Navigation("AAcc9Navigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Check", b =>
                {
                    b.HasOne("CityInfoApi.Models.Onvan", "CHesabNavigation")
                        .WithMany("CheckCHesabNavigations")
                        .HasForeignKey("CHesab")
                        .HasConstraintName("FK_Check_Onvan");

                    b.HasOne("CityInfoApi.Models.Onvan", "CHesab2Navigation")
                        .WithMany("CheckCHesab2Navigations")
                        .HasForeignKey("CHesab2")
                        .HasConstraintName("FK_Check_Onvan1");

                    b.HasOne("CityInfoApi.Models.SanadItm", "C")
                        .WithMany("Checks")
                        .HasForeignKey("CSanad", "CRadif")
                        .HasConstraintName("FK_CHECK_SanadITM");

                    b.Navigation("C");

                    b.Navigation("CHesab2Navigation");

                    b.Navigation("CHesabNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Factor1", b =>
                {
                    b.HasOne("CityInfoApi.Models.Onvan", "FAccEzafatNavigation")
                        .WithMany("Factor1FAccEzafatNavigations")
                        .HasForeignKey("FAccEzafat")
                        .HasConstraintName("FK_Factor1_Onvan1");

                    b.HasOne("CityInfoApi.Models.Onvan", "FAccKosoratNavigation")
                        .WithMany("Factor1FAccKosoratNavigations")
                        .HasForeignKey("FAccKosorat")
                        .HasConstraintName("FK_Factor1_Onvan");

                    b.HasOne("CityInfoApi.Models.Anbar", "FAnbarNavigation")
                        .WithMany("Factor1FAnbarNavigations")
                        .HasForeignKey("FAnbar")
                        .IsRequired()
                        .HasConstraintName("FK_FACTOR_ANBAR");

                    b.HasOne("CityInfoApi.Models.Anbar", "FAnbar2Navigation")
                        .WithMany("Factor1FAnbar2Navigations")
                        .HasForeignKey("FAnbar2")
                        .HasConstraintName("FK_Factor1_Anbar");

                    b.HasOne("CityInfoApi.Models.Moshtari", "FMoshtariNavigation")
                        .WithMany("Factor1FMoshtariNavigations")
                        .HasForeignKey("FMoshtari")
                        .HasConstraintName("FK_Factor1_Moshtari");

                    b.HasOne("CityInfoApi.Models.Moshtari", "FPorsantNavigation")
                        .WithMany("Factor1FPorsantNavigations")
                        .HasForeignKey("FPorsant")
                        .HasConstraintName("FK_Factor1_Moshtari1");

                    b.HasOne("CityInfoApi.Models.Sanad", "FSanadNavigation")
                        .WithMany("Factor1s")
                        .HasForeignKey("FSanad")
                        .HasConstraintName("FK_Factor1_Sanad");

                    b.HasOne("CityInfoApi.Models.Payment1", "F")
                        .WithMany("Factor1s")
                        .HasForeignKey("FKindPay", "FNoPay")
                        .HasConstraintName("FK_Factor1_Payment1");

                    b.Navigation("F");

                    b.Navigation("FAccEzafatNavigation");

                    b.Navigation("FAccKosoratNavigation");

                    b.Navigation("FAnbar2Navigation");

                    b.Navigation("FAnbarNavigation");

                    b.Navigation("FMoshtariNavigation");

                    b.Navigation("FPorsantNavigation");

                    b.Navigation("FSanadNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Factor2", b =>
                {
                    b.HasOne("CityInfoApi.Models.Factor1", "FkFactorNavigation")
                        .WithMany("Factor2s")
                        .HasForeignKey("FkFactor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Factor2_Factor1");

                    b.HasOne("CityInfoApi.Models.Kala", "FkKalaNavigation")
                        .WithMany("Factor2s")
                        .HasForeignKey("FkKala")
                        .HasConstraintName("FK_Factor2_Kala");

                    b.Navigation("FkFactorNavigation");

                    b.Navigation("FkKalaNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.InEditFactor", b =>
                {
                    b.HasOne("CityInfoApi.Models.Factor1", "FFactorNavigation")
                        .WithOne("InEditFactor")
                        .HasForeignKey("CityInfoApi.Models.InEditFactor", "FFactor")
                        .IsRequired()
                        .HasConstraintName("FK_InEditFactors_Factor1");

                    b.Navigation("FFactorNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.InEditKhadamat", b =>
                {
                    b.HasOne("CityInfoApi.Models.Khadamat", "KhNoNavigation")
                        .WithOne("InEditKhadamat")
                        .HasForeignKey("CityInfoApi.Models.InEditKhadamat", "KhNo")
                        .IsRequired()
                        .HasConstraintName("FK_InEditKhadamat_Khadamat");

                    b.Navigation("KhNoNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.InEditPayment", b =>
                {
                    b.HasOne("CityInfoApi.Models.Payment1", "P1")
                        .WithMany("InEditPayments")
                        .HasForeignKey("P1Kind", "P1No")
                        .IsRequired()
                        .HasConstraintName("FK_InEditPayment_Payment1");

                    b.Navigation("P1");
                });

            modelBuilder.Entity("CityInfoApi.Models.InEditSanad", b =>
                {
                    b.HasOne("CityInfoApi.Models.Sanad", "SSanadNavigation")
                        .WithOne("InEditSanad")
                        .HasForeignKey("CityInfoApi.Models.InEditSanad", "SSanad")
                        .IsRequired()
                        .HasConstraintName("FK_InEditSanads_Sanad");

                    b.Navigation("SSanadNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.InEditSefaresh", b =>
                {
                    b.HasOne("CityInfoApi.Models.Sefaresh1", "S1NoNavigation")
                        .WithMany()
                        .HasForeignKey("S1No")
                        .IsRequired()
                        .HasConstraintName("FK_InEditSefaresh_Sefaresh1");

                    b.Navigation("S1NoNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Kafactor", b =>
                {
                    b.HasOne("CityInfoApi.Models.Onvan", "KaAccNavigation")
                        .WithMany("Kafactors")
                        .HasForeignKey("KaAcc")
                        .HasConstraintName("FK_KAFactor_Onvan");

                    b.Navigation("KaAccNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.KafactorL", b =>
                {
                    b.HasOne("CityInfoApi.Models.Factor1", "LFactorNavigation")
                        .WithMany("KafactorLs")
                        .HasForeignKey("LFactor")
                        .IsRequired()
                        .HasConstraintName("FK_KAFactorL_Factor1");

                    b.HasOne("CityInfoApi.Models.Kafactor", "LKaNavigation")
                        .WithMany("KafactorLs")
                        .HasForeignKey("LKa")
                        .IsRequired()
                        .HasConstraintName("FK_KAFactorL_KAFactor");

                    b.Navigation("LFactorNavigation");

                    b.Navigation("LKaNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Kala", b =>
                {
                    b.HasOne("CityInfoApi.Models.GorohK", "KGorohNavigation")
                        .WithMany("Kalas")
                        .HasForeignKey("KGoroh")
                        .IsRequired()
                        .HasConstraintName("FK_Kala_GorohK");

                    b.Navigation("KGorohNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.KalaM", b =>
                {
                    b.HasOne("CityInfoApi.Models.Anbar", "KmAnbarNavigation")
                        .WithMany("KalaMs")
                        .HasForeignKey("KmAnbar")
                        .IsRequired()
                        .HasConstraintName("FK_KalaM_Anbar");

                    b.HasOne("CityInfoApi.Models.Kala", "KmCodeNavigation")
                        .WithMany("KalaMs")
                        .HasForeignKey("KmCode")
                        .IsRequired()
                        .HasConstraintName("FK_KalaM_Kala");

                    b.Navigation("KmAnbarNavigation");

                    b.Navigation("KmCodeNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.KalaT", b =>
                {
                    b.HasOne("CityInfoApi.Models.Kala", "TKalaNavigation")
                        .WithMany("KalaTTKalaNavigations")
                        .HasForeignKey("TKala")
                        .IsRequired()
                        .HasConstraintName("FK_KalaT_Kala");

                    b.HasOne("CityInfoApi.Models.Kala", "TKalaItmNavigation")
                        .WithMany("KalaTTKalaItmNavigations")
                        .HasForeignKey("TKalaItm")
                        .HasConstraintName("FK_KalaT_Kala1");

                    b.Navigation("TKalaItmNavigation");

                    b.Navigation("TKalaNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Khadamat", b =>
                {
                    b.HasOne("CityInfoApi.Models.Onvan", "KhAccNavigation")
                        .WithMany("Khadamats")
                        .HasForeignKey("KhAcc")
                        .HasConstraintName("FK_Khadamat_Onvan");

                    b.HasOne("CityInfoApi.Models.Moshtari", "KhMoshtariNavigation")
                        .WithMany("Khadamats")
                        .HasForeignKey("KhMoshtari")
                        .HasConstraintName("FK_Khadamat_Moshtari");

                    b.HasOne("CityInfoApi.Models.Sanad", "KhSanadNavigation")
                        .WithMany("Khadamats")
                        .HasForeignKey("KhSanad")
                        .HasConstraintName("FK_Khadamat_Sanad");

                    b.HasOne("CityInfoApi.Models.Payment1", "Kh")
                        .WithMany("Khadamats")
                        .HasForeignKey("KhKindPay", "KhNoPay")
                        .HasConstraintName("FK_Khadamat_Payment1");

                    b.Navigation("Kh");

                    b.Navigation("KhAccNavigation");

                    b.Navigation("KhMoshtariNavigation");

                    b.Navigation("KhSanadNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Moshtari", b =>
                {
                    b.HasOne("CityInfoApi.Models.Onvan", "MAccNavigation")
                        .WithMany("Moshtaris")
                        .HasForeignKey("MAcc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Moshtari_Onvan");

                    b.HasOne("CityInfoApi.Models.GorohM", "MGorohNavigation")
                        .WithMany("Moshtaris")
                        .HasForeignKey("MGoroh")
                        .IsRequired()
                        .HasConstraintName("FK_Moshtari_GorohM");

                    b.Navigation("MAccNavigation");

                    b.Navigation("MGorohNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.MoshtariTkmili", b =>
                {
                    b.HasOne("CityInfoApi.Models.Moshtari", "MCodeMNavigation")
                        .WithOne("MoshtariTkmili")
                        .HasForeignKey("CityInfoApi.Models.MoshtariTkmili", "MCodeM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MoshtariTkmili_Moshtari");

                    b.Navigation("MCodeMNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Onvan", b =>
                {
                    b.HasOne("CityInfoApi.Models.Goroh", "OGorohNavigation")
                        .WithMany("Onvans")
                        .HasForeignKey("OGoroh")
                        .HasConstraintName("FK_Onvan_Goroh");

                    b.Navigation("OGorohNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Payment1", b =>
                {
                    b.HasOne("CityInfoApi.Models.Onvan", "P1Acc1Navigation")
                        .WithMany("Payment1P1Acc1Navigations")
                        .HasForeignKey("P1Acc1")
                        .HasConstraintName("FK_Payment1_Onvan");

                    b.HasOne("CityInfoApi.Models.Onvan", "P1Acc2Navigation")
                        .WithMany("Payment1P1Acc2Navigations")
                        .HasForeignKey("P1Acc2")
                        .HasConstraintName("FK_Payment1_Onvan1");

                    b.HasOne("CityInfoApi.Models.Moshtari", "P1MoshtariNavigation")
                        .WithMany("Payment1s")
                        .HasForeignKey("P1Moshtari")
                        .HasConstraintName("FK_Payment1_Moshtari");

                    b.HasOne("CityInfoApi.Models.Sanad", "P1SanadNavigation")
                        .WithMany("Payment1s")
                        .HasForeignKey("P1Sanad")
                        .HasConstraintName("FK_Payment1_Sanad");

                    b.Navigation("P1Acc1Navigation");

                    b.Navigation("P1Acc2Navigation");

                    b.Navigation("P1MoshtariNavigation");

                    b.Navigation("P1SanadNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Payment2", b =>
                {
                    b.HasOne("CityInfoApi.Models.Onvan", "P2AccNavigation")
                        .WithMany("Payment2P2AccNavigations")
                        .HasForeignKey("P2Acc")
                        .HasConstraintName("FK_Payment2_Onvan");

                    b.HasOne("CityInfoApi.Models.Onvan", "P2Acc2Navigation")
                        .WithMany("Payment2P2Acc2Navigations")
                        .HasForeignKey("P2Acc2")
                        .HasConstraintName("FK_Payment2_Onvan1");

                    b.HasOne("CityInfoApi.Models.Check", "P2CheckNavigation")
                        .WithMany("Payment2s")
                        .HasForeignKey("P2Check")
                        .HasConstraintName("FK_Payment2_Check");

                    b.HasOne("CityInfoApi.Models.Payment1", "P2")
                        .WithMany("Payment2s")
                        .HasForeignKey("P2Kind", "P2No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Payment2_Payment1");

                    b.Navigation("P2");

                    b.Navigation("P2Acc2Navigation");

                    b.Navigation("P2AccNavigation");

                    b.Navigation("P2CheckNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Rfactor2", b =>
                {
                    b.HasOne("CityInfoApi.Models.Rfactor1", "RNoNavigation")
                        .WithMany()
                        .HasForeignKey("RNo")
                        .HasConstraintName("FK_RFactor2_RFactor1");

                    b.Navigation("RNoNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Rpayment2", b =>
                {
                    b.HasOne("CityInfoApi.Models.Rpayment1", "RNoNavigation")
                        .WithMany()
                        .HasForeignKey("RNo")
                        .HasConstraintName("FK_RPayment2_RPayment1");

                    b.Navigation("RNoNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.RsanadItm", b =>
                {
                    b.HasOne("CityInfoApi.Models.Rsanad", "RNoNavigation")
                        .WithMany()
                        .HasForeignKey("RNo")
                        .IsRequired()
                        .HasConstraintName("FK_RSanadITM_RSanad");

                    b.Navigation("RNoNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.SanadItm", b =>
                {
                    b.HasOne("CityInfoApi.Models.Onvan", "AccNavigation")
                        .WithMany("SanadItms")
                        .HasForeignKey("Acc")
                        .IsRequired()
                        .HasConstraintName("FK_SanadITM_Onvan");

                    b.HasOne("CityInfoApi.Models.Factor1", "FFactorNavigation")
                        .WithMany("SanadItms")
                        .HasForeignKey("FFactor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_SanadITM_Factor1");

                    b.HasOne("CityInfoApi.Models.Khadamat", "KhKhadamatNavigation")
                        .WithMany("SanadItms")
                        .HasForeignKey("KhKhadamat")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_SanadITM_Khadamat");

                    b.HasOne("CityInfoApi.Models.Sanad", "SSanadNavigation")
                        .WithMany("SanadItms")
                        .HasForeignKey("SSanad")
                        .IsRequired()
                        .HasConstraintName("FK_SanadITM_Sanad");

                    b.HasOne("CityInfoApi.Models.Payment1", "P")
                        .WithMany("SanadItms")
                        .HasForeignKey("PKind", "PPayment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_SanadITM_Payment1");

                    b.Navigation("AccNavigation");

                    b.Navigation("FFactorNavigation");

                    b.Navigation("KhKhadamatNavigation");

                    b.Navigation("P");

                    b.Navigation("SSanadNavigation");
                });

            modelBuilder.Entity("CityInfoApi.Models.Sefaresh2", b =>
                {
                    b.HasOne("CityInfoApi.Models.Kala", "S2KalaNavigation")
                        .WithMany("Sefaresh2s")
                        .HasForeignKey("S2Kala")
                        .IsRequired()
                        .HasConstraintName("FK_Sefaresh2_Kala");

                    b.HasOne("CityInfoApi.Models.Sefaresh1", "S2NoNavigation")
                        .WithMany("Sefaresh2s")
                        .HasForeignKey("S2No")
                        .IsRequired()
                        .HasConstraintName("FK_Sefaresh2_Sefaresh1");

                    b.Navigation("S2KalaNavigation");

                    b.Navigation("S2NoNavigation");
                });

            modelBuilder.Entity("Tashaboh", b =>
                {
                    b.HasOne("CityInfoApi.Models.Kala", null)
                        .WithMany()
                        .HasForeignKey("KCode")
                        .IsRequired()
                        .HasConstraintName("FK_Tashaboh_Kala");

                    b.HasOne("CityInfoApi.Models.GorohT", null)
                        .WithMany()
                        .HasForeignKey("TCode")
                        .IsRequired()
                        .HasConstraintName("FK_Tashaboh_GorohT");
                });

            modelBuilder.Entity("CityInfoApi.Models.Anbar", b =>
                {
                    b.Navigation("Factor1FAnbar2Navigations");

                    b.Navigation("Factor1FAnbarNavigations");

                    b.Navigation("KalaMs");
                });

            modelBuilder.Entity("CityInfoApi.Models.Check", b =>
                {
                    b.Navigation("Payment2s");
                });

            modelBuilder.Entity("CityInfoApi.Models.Factor1", b =>
                {
                    b.Navigation("Factor2s");

                    b.Navigation("InEditFactor")
                        .IsRequired();

                    b.Navigation("KafactorLs");

                    b.Navigation("SanadItms");
                });

            modelBuilder.Entity("CityInfoApi.Models.Goroh", b =>
                {
                    b.Navigation("Onvans");
                });

            modelBuilder.Entity("CityInfoApi.Models.GorohK", b =>
                {
                    b.Navigation("Kalas");
                });

            modelBuilder.Entity("CityInfoApi.Models.GorohM", b =>
                {
                    b.Navigation("Moshtaris");
                });

            modelBuilder.Entity("CityInfoApi.Models.Kafactor", b =>
                {
                    b.Navigation("KafactorLs");
                });

            modelBuilder.Entity("CityInfoApi.Models.Kala", b =>
                {
                    b.Navigation("Factor2s");

                    b.Navigation("KalaMs");

                    b.Navigation("KalaTTKalaItmNavigations");

                    b.Navigation("KalaTTKalaNavigations");

                    b.Navigation("Sefaresh2s");
                });

            modelBuilder.Entity("CityInfoApi.Models.Khadamat", b =>
                {
                    b.Navigation("InEditKhadamat")
                        .IsRequired();

                    b.Navigation("SanadItms");
                });

            modelBuilder.Entity("CityInfoApi.Models.Moshtari", b =>
                {
                    b.Navigation("Factor1FMoshtariNavigations");

                    b.Navigation("Factor1FPorsantNavigations");

                    b.Navigation("Khadamats");

                    b.Navigation("MoshtariTkmili")
                        .IsRequired();

                    b.Navigation("Payment1s");
                });

            modelBuilder.Entity("CityInfoApi.Models.Onvan", b =>
                {
                    b.Navigation("AnbarAAcc10Navigations");

                    b.Navigation("AnbarAAcc11Navigations");

                    b.Navigation("AnbarAAcc12Navigations");

                    b.Navigation("AnbarAAcc13Navigations");

                    b.Navigation("AnbarAAcc14Navigations");

                    b.Navigation("AnbarAAcc16Navigations");

                    b.Navigation("AnbarAAcc19Navigations");

                    b.Navigation("AnbarAAcc1Navigations");

                    b.Navigation("AnbarAAcc22Navigations");

                    b.Navigation("AnbarAAcc23Navigations");

                    b.Navigation("AnbarAAcc24Navigations");

                    b.Navigation("AnbarAAcc2Navigations");

                    b.Navigation("AnbarAAcc3Navigations");

                    b.Navigation("AnbarAAcc4Navigations");

                    b.Navigation("AnbarAAcc5Navigations");

                    b.Navigation("AnbarAAcc6Navigations");

                    b.Navigation("AnbarAAcc7Navigations");

                    b.Navigation("AnbarAAcc9Navigations");

                    b.Navigation("CheckCHesab2Navigations");

                    b.Navigation("CheckCHesabNavigations");

                    b.Navigation("Factor1FAccEzafatNavigations");

                    b.Navigation("Factor1FAccKosoratNavigations");

                    b.Navigation("Kafactors");

                    b.Navigation("Khadamats");

                    b.Navigation("Moshtaris");

                    b.Navigation("Payment1P1Acc1Navigations");

                    b.Navigation("Payment1P1Acc2Navigations");

                    b.Navigation("Payment2P2Acc2Navigations");

                    b.Navigation("Payment2P2AccNavigations");

                    b.Navigation("SanadItms");
                });

            modelBuilder.Entity("CityInfoApi.Models.Payment1", b =>
                {
                    b.Navigation("Factor1s");

                    b.Navigation("InEditPayments");

                    b.Navigation("Khadamats");

                    b.Navigation("Payment2s");

                    b.Navigation("SanadItms");
                });

            modelBuilder.Entity("CityInfoApi.Models.Sanad", b =>
                {
                    b.Navigation("Factor1s");

                    b.Navigation("InEditSanad")
                        .IsRequired();

                    b.Navigation("Khadamats");

                    b.Navigation("Payment1s");

                    b.Navigation("SanadItms");
                });

            modelBuilder.Entity("CityInfoApi.Models.SanadItm", b =>
                {
                    b.Navigation("Checks");
                });

            modelBuilder.Entity("CityInfoApi.Models.Sefaresh1", b =>
                {
                    b.Navigation("Sefaresh2s");
                });
#pragma warning restore 612, 618
        }
    }
}
